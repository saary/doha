var childProcess = require('child_process');

var digitalocean = require('digitalocean');
var client = digitalocean.client('TOKEN');


calculateFingerprintFromPath('~/.ssh/id_rsa.pub', findKeyOrCreateSshKey);

// Helper functions

function calculateFingerprintFromPath(path, callback) {
  var fingerprintCmd = "ssh-keygen -lf " + path + " | awk '{ print $2 }'";
  childProcess.exec(fingerprintCmd, function(error, fingerprint) {
    if (error) {
      return console.error('Uhoh, there was an error generating the fingerprint', error);
    }

    callback.call(this, path, fingerprint);
  });
}

function findKeyOrCreateSshKey(path, fingerprint) {
  client.sshKeys.get(fingerprint, function(err) {
    if(err && err.statusCode === 404) {
      createKeyFromPath(path);
    } else {
      console.log('Key already exists.');
    }
  });
}

function createKeyFromPath(path) {
  var keyContentCmd = "cat " + path;
  childProcess.exec(keyContentCmd, function(error, keyContent) {
    if (error) {
      return console.error('Uhoh, there was an error', error);
    }

    createKey(keyContent);
  });
}

function createKey(keyContent) {
  var keyAttributes = {
    "public_key": keyContent,
    "name": "id_rsa"
  };
  client.sshKeys.create(keyAttributes, function(err) {
    if (err) {
      console.error('Uhoh, there was an error creating the key', err);
    } else {
      console.log('Created key.');
    }
  });
}